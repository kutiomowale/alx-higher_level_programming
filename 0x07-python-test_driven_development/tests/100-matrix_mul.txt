>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> matrix_mul(1, [[1]])
Traceback (most recent call last):
TypeError: m_a must be a list
>>> matrix_mul([[1]], '4')
Traceback (most recent call last):
TypeError: m_b must be a list
>>> matrix_mul([[2], 3], [[1, 3]])
Traceback (most recent call last):
TypeError: m_a must be a list of lists
>>> matrix_mul([[1, 3]], [[3], 4])
Traceback (most recent call last):
TypeError: m_b must be a list of lists
>>> matrix_mul([], [[1, 3]])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> matrix_mul([[1, 3]], [])
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> matrix_mul([[]], [[1, 3]])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> matrix_mul([[1, 3]], [[]])
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> matrix_mul([[5, '6']], [[1, 3]])
Traceback (most recent call last):
ValueError: m_a should contain only integers or floats
>>> matrix_mul([[1, 3]], [[6, '7']])
Traceback (most recent call last):
ValueError: m_b should contain only integers or floats
>>> matrix_mul([[1, 2], [1, 3, 4]], [[1, 3], [4, 5]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size
>>> matrix_mul([[1, 2], [1, 3]], [[1, 3], [4, 5, 6]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size
